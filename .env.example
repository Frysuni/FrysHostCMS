# ------------ # NAME # ---------------- #
# Изменяет:
#  - Автора в Email сообщениях
NAME=FrysHost # String

# ------------ # DEBUG # --------------- #
# npm run dev не имеет отношения к дебагу
# При включеном Debug режиме:
#  - не проверяется recapthca
#  - оказывает влияние на логгирование (читать ниже)
DEBUG=false # Boolean

# ----------- # LOGGER # --------------- #
# Только backend логи. Путь до логов - cms/backend/(logs/[briefly, errors, requests]/DD.MM.YYYY.[log, yaml][.gz])
# Пустая строка выключает логгирование.
# Между типами логов ставится разделитель "."
# Синтаксис записи выглядит так: {ТИП}{АРГУМЕНТЫ}[.{ТИП}{АРГУМЕНТЫ}]
# Возможные аргументы: "C" - Console (Выводить в консоль), "F" - File (Записывать в файл), "A" - Archive (Архивировать старые лог-файлы), "D" - Debug (Включать только в дебаг режиме)
# Briefly logs - "B", может иметь аргументы: С, F, A, D
# Errors logs - "E", может иметь аргументы: С, F, A, D
# Requests logs - "R", может иметь аргументы: F, A, D
# Nest core logs - "N", может иметь аргументы: C, D
# Отсутсвие типа отключает его логгирование. Осторожно, тип без аргументов выведет ошибку.
# Знаки пробела игнорируются, регистр не важен, порядок аргументов и типов не важен, двойные кавычки не обязательны, если нет пробелов,
# Более двух разделителей(точек) не рекомендуется, 
# Пример верной записи: "BCFAD.ECFAD.RFAD.NC" | "EFA", пример возможной записи: "eCfA.BCd FA" | "B.EFAD", пример неверной записи: "BCR.CFAD" | "BCR." | "B.R.N"
# Рекомендуется "BCD.EFA.RFAD.NCD"
LOGGER="BCFA.ECFA.RFA.NC" # "String"

# ------ # ASSETS_AUTO_ROUTING # ------- #
# Автоматическая выдача скинов по запросу {API_URL}/assets/{uuid}
# Рекомендуется выключить для продакшн использования и сделать раздачу скинов через nginx
# Путь до скинов - cms/backend/(assets)
ASSETS_AUTO_ROUTING=true # Boolean

# ------ # SAVE_PLAIN_PASSWORD # ------- #
# Сохранение нехэшированных паролей.
# cms/backend/(.plainPasswords)
SAVE_PLAIN_PASSWORD=true # Boolean

# ------------- # MAIL # --------------- #
# Стандартная настройка почтового сервиса
MAIL_HOST="" # "String"
MAIL_USER="" # "String"
MAIL_PASS="" # "String"
MAIL_PORT=465 # String as port number [default: 465]
MAIL_SECURE=true # Boolean [default: {MAIL_PORT == 465}]

# ----------- # DISCORD # -------------- #
# Discord application
DISCORD_CLIENT_ID="" # "String"
DISCORD_CLIENT_SECRET="" # "String"
DISCORD_GUILD_ID="" # "String"

# -------- # PORTS AND URLS # ---------- #
# X_PORT указывает то, на каких портах будут запущены серверы
# X_URL уже указывает внешний url каждого сервиса. Не локальный!
# Для большего понимания разницы: условно для подтверждения почты
# пользователю будет отправлено {API_URL}/email/confirm
# Это значит, что по API_URL должен быть сделан доступ к API серверу из интернета.
# Пример значений для API_URL:
#  - "https://api.fryshost.ru" для продакшена
#  - "https://fryshost.ru/api" такая запись тоже возможна, сервер автоматически настроит префикс (для понимающих)
#  - "http://localhost:4000"   для запуска в локальном (dev) окружении
BASE_PORT=4000 # String as port number [default: 4000]
API_PORT=3000 # String as port number [default: 3000]
BASE_URL="http://localhost:4000" # "String"
API_URL="http://localhost:3000" # "String"

# ----------- # RECAPTCHA # ------------ #
# Только google reCAPTCHA V2!
# https://www.google.com/recaptcha/admin/create
RECAPTCHA_SECRET="" # "String"

# -------------- # DB # ---------------- #
# Стандартная настройка подключения БД
# Только mysql
DB_TYPE="mysql" # "mysql | mariadb"
DB_HOST="192.168.1.10" # "String"
DB_PORT=3306 # String as port number
DB_USER="" # "String"
DB_DATABASE="" # "String"
DB_PASS="" # "String"